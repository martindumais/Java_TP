{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red0\green0\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c1680\c19835\c100000;\cssrgb\c1680\c19835\c100000;\cssrgb\c0\c0\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww12300\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs24 \cf0 Notes Java
\f1\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b \cf0 Manipulation de texte (chaines de caract\'e8res)
\f1\b0  \
	
\f0\b \cf2 -String() -> cr\'e9e des chaines immuables 
\f1\b0 \cf0 \
	- .concat(\'ab\'a0string\'a0\'bb) -> concat\'e9nation\
	-.replace(\'ab\'a0a\'a0\'bb, \'ab\'a0a\'92\'a0\'bb) -> remplacement de caract\'e8res \
	-.trim(index,no) -> enl\'e8ve les espaces devant la chaine \
	- .substring() -> extraction de caract\'e8res\
	-.length() \
	- .toUpperCase()-> met tt en majuscule\
	-.toLowerCase() -> met tt en minuscule\
	-.charAt(index) -> renvoie le caract\'e8re \'e0 l\'92index renseign\'e9\
	-.equals(a) -> compare 2 chaines\
	-.compareTo(a)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 	
\f0\b -StringTokenizer(a,\'a0\'ab\'a0/\'ab, true\'a0\'a0) -> divise une chaine =>java.util.StringTokenizer
\f1\b0 \cf0 \
	-.hasMoreTokens() -> pour contr\'f4ler les bouts de chaine r\'e9sultants de la division\
	-.nextToken() -> manipulation/r\'e9cup\'e9ration/acc\'e8s au prochain bout de chaine divis\'e9\
\
\cf2 	
\f0\b -StringBuffer() -> multithreads (plus lent) : cr\'e9e des chaines muables
\f1\b0 \cf0 \
	-.append(\'ab\'a0string\'a0\'bb) -> ajoute du texte \'e0 la fin d\'92une chaine existante dans une variable\
	-.insert(index,\'ab\'a0string\'a0\'bb) ->insert une chaine \'e0 l\'92index indiqu\'e9 dans la chaine existante\
	-.capacity() -> donne le nombre de caract\'e8res maximal que peut contenir la variable\
	-.length() -> donne la longueur de la chaine contenu dans la variable\
\
\cf2 	
\f0\b -StringBuilder() -> monothread (plus rapide) : cr\'e9e des chaines muables \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0 \cf0 \

\f0\b Lecture de donn\'e9es
\f1\b0 \

\f0\b \cf2 - BufferedReader() ->  \cf3 monothread (plus lent) : \cf2 lit les donn\'e9es entr\'e9es par l\'92utilisateur comme un String => java.io.BufferedReader\

\f1\b0 \cf4 	- .read() -> lit un caract\'e8re\
	- .readline -> lit une chaine de caract\'e8res\
	- .skip -> saute des caract\'e8res\

\f0\b \cf2 \
- scanner() -> \cf3 multithreads (plus rapide) : \cf2 lit et analyse (parsing) les donn\'e9es de l\'92utilisateur pour d\'e9terminer si son type correspond \'e0 celui attendu =>java.util.Scanner\
	
\f1\b0 \cf4 - .nextChar()\
	- .nextLine()\
	- .nextInt()\
	- .nextFloat()\
	- .nextBoolean()\

\f0\b \cf2 \
- InputStreamReader() -> m\'e9taclasse de lecture de flux d\'92entr\'e9es (System.In) => java.io.StreamReader
\f1\b0 \cf0 \
}